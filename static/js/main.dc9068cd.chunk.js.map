{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","analytics","SignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","currentUser","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","class","placeholder","value","onChange","target","type","disabled","xmlns","width","height","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","aria-hidden","data-reactid","x1","y1","x2","y2","points","props","messageClass","src","App","useAuthState","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc9068cd.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\n import './App.css';\n\n import firebase from 'firebase/app';\n import 'firebase/firestore';\n import 'firebase/auth';\nimport 'firebase/analytics';\n import { useAuthState } from 'react-firebase-hooks/auth';\n import { useCollectionData } from 'react-firebase-hooks/firestore';\nif (!firebase.apps.length) {\n firebase.initializeApp({\n     apiKey: \"AIzaSyA3LMCDB2e-oNm1GGEoJXlidv0HcAJjgqk\",\n     authDomain: \"chat-workflow.firebaseapp.com\",\n     databaseURL: \"https://chat-workflow.firebaseio.com\",\n     projectId: \"chat-workflow\",\n     storageBucket: \"chat-workflow.appspot.com\",\n     messagingSenderId: \"40643269425\",\n     appId: \"1:40643269425:web:15b157909385da98835610\",\n     measurementId: \"G-6P1EQ5RYFQ\"\n });\n}\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n function App() {\n\nconst [user] =  useAuthState(auth);\n\n     return ( \n     <div className = \"App\" >\n         <header className = \"App-header\" >\n\t \n         </header> \n \n\t\t \n<div class=\"--dark-theme\" id=\"chat\">\n\n  {user ? <ChatRoom/> :<SignIn />}\n  \n  \n\n\n</div>\t \n\t\t \n\t\t \n         </div>\n     );\n }\n\nfunction SignIn() {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google</button>\n  \n    </>\n  )\n\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt');\n\n  const [messages] = useCollectionData(query, { idField: 'id' });\n\n  const [formValue, setFormValue] = useState('');\n\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (<>\n   \n\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n      <span ref={dummy}></span>\n<div>\n <form onSubmit={sendMessage}>\n     <div class=\"chat__conversation-panel\">\n    <div class=\"chat__conversation-panel__container\">\n\n      <input class=\"chat__conversation-panel__input panel-item\" placeholder=\"Type a message...\" value={formValue} onChange={(e) => setFormValue(e.target.value)} />\n      <button class=\"chat__conversation-panel__button panel-item btn-icon send-message-button\" type=\"submit\" disabled={!formValue}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" aria-hidden=\"true\" data-reactid=\"1036\">\n          <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line>\n          <polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon>\n        </svg>\n      </button>\n\t   \n    </div>\n  </div>\n  </form>\n</div>\n  </>)\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'chat__conversation-board__message-container reversed' : 'chat__conversation-board__message-container';\n\n  return (<>\n  \n    <div class=\"chat__conversation-board\"  >\n    <div  className={`${messageClass}`}>\n      <div class=\"chat__conversation-board__message__person\">\n        <div class=\"chat__conversation-board__message__person__avatar\">\n\t\t <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} />\n\t\t</div>\n\t\t<span class=\"chat__conversation-board__message__person__nickname\">{text}</span>\n      </div>\n      <div class=\"chat__conversation-board__message__context\">\n        <div class=\"chat__conversation-board__message__bubble\"> <span>{text}</span></div>\n      </div>\n    </div>\n   </div>\n   \n   \n   \n \n  </>)\n}\n\n export default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}